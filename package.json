{
  "name": "platformio-ide",
  "version": "1.0.0-rc.1",
  "publisher": "platformio",
  "engines": {
    "vscode": "^1.24.0"
  },
  "license": "Apache-2.0",
  "displayName": "PlatformIO IDE",
  "description": "Development environment for IoT, Arduino, ARM mbed, Espressif (ESP8266/ESP32), RISC-V, STM32, PIC32, nRF51/nRF52, MSP430, MCS-51 (8051), FPGA, FreeRTOS, ESP-IDF, CMSIS, SPL, AVR, Samsung ARTIK, libOpenCM3",
  "categories": [
    "Programming Languages",
    "Debuggers",
    "Other"
  ],
  "keywords": [
    "IoT",
    "embedded",
    "firmware",
    "debug",
    "microcontroller"
  ],
  "main": "./lib/main",
  "icon": "resources/platformio-logo.png",
  "homepage": "https://platformio.org",
  "author": {
    "name": "PlatformIO.Org"
  },
  "bugs": {
    "url": "https://github.com/platformio/platformio-vscode-ide/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/platformio/platformio-vscode-ide.git"
  },
  "activationEvents": [
    "*"
  ],
  "contributes": {
    "languages": [
      {
        "id": "platformio-debug.disassembly",
        "aliases": [
          "Disassembly"
        ],
        "extensions": [
          ".dbgasm"
        ]
      },
      {
        "id": "platformio-debug.memoryview",
        "aliases": [
          "Memory"
        ],
        "extensions": [
          ".dbgmem"
        ]
      },
      {
        "id": "platformio-debug.asm",
        "aliases": [
          "Assembly",
          "asm"
        ],
        "extensions": [
          ".asm",
          ".nasm",
          ".yasm",
          ".inc",
          ".s"
        ],
        "configuration": "./syntaxes/assembly-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "platformio-debug.disassembly",
        "scopeName": "source.platformio-debug-disassembly",
        "path": "./syntaxes/platformio-debug-disassembly.json"
      },
      {
        "language": "platformio-debug.memoryview",
        "scopeName": "source.platformio-debug-memoryview",
        "path": "./syntaxes/platformio-debug-memoryview.json"
      },
      {
        "language": "platformio-debug.asm",
        "scopeName": "source.platformio-debug-asm",
        "path": "./syntaxes/assembly.tmLanguage"
      }
    ],
    "commands": [
      {
        "command": "platformio-ide.showHome",
        "title": "Home",
        "category": "PlatformIO"
      },
      {
        "command": "platformio-ide.build",
        "title": "Build",
        "category": "PlatformIO"
      },
      {
        "command": "platformio-ide.upload",
        "title": "Upload",
        "category": "PlatformIO"
      },
      {
        "command": "platformio-ide.remote",
        "title": "Remote",
        "category": "PlatformIO"
      },
      {
        "command": "platformio-ide.clean",
        "title": "Clean",
        "category": "PlatformIO"
      },
      {
        "command": "platformio-ide.test",
        "title": "Test",
        "category": "PlatformIO"
      },
      {
        "command": "platformio-ide.serialMonitor",
        "title": "Serial Monitor",
        "category": "PlatformIO"
      },
      {
        "command": "platformio-ide.rebuildProjectIndex",
        "title": "Rebuild IntelliSense Index",
        "category": "PlatformIO"
      },
      {
        "command": "platformio-ide.newTerminal",
        "title": "New Terminal",
        "category": "PlatformIO"
      },
      {
        "command": "platformio-ide.updateGlobalLibs",
        "title": "Update global libraries",
        "category": "PlatformIO"
      },
      {
        "command": "platformio-ide.updatePlatforms",
        "title": "Update platforms & packages",
        "category": "PlatformIO"
      },
      {
        "command": "platformio-ide.updateCore",
        "title": "Update PlatformIO Core packages",
        "category": "PlatformIO"
      },
      {
        "command": "platformio-ide.upgradeCore",
        "title": "Upgrade PlatformIO Core to the latest version",
        "category": "PlatformIO"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.peripherals.updateNode",
        "title": "Update Value"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.peripherals.selectedNode",
        "title": "Selected"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.registers.selectedNode",
        "title": "Selected"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.peripherals.copyValue",
        "title": "Copy Value"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.registers.copyValue",
        "title": "Copy Value"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.peripherals.setFormat",
        "title": "Set Value Format"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.registers.setFormat",
        "title": "Set Value Format"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.examineMemory",
        "title": " View Memory",
        "icon": {
          "light": "resources/icons/add.svg",
          "dark": "resources/icons/add-inverse.svg"
        }
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.memory.clearHistory",
        "title": "Clear Memory View History",
        "icon": {
          "light": "resources/icons/closeall.svg",
          "dark": "resources/icons/closeall-inverse.svg"
        }
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.memory.deleteHistoryItem",
        "title": "Delete"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.viewDisassembly",
        "title": "View Disassembly (Function)"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.setForceDisassembly",
        "title": "Set Force Disassembly"
      }
    ],
    "debuggers": [
      {
        "enableBreakpointsFor": {
          "languageIds": [
            "c",
            "cpp",
            "asm",
            "arm",
            "platformio-debug.disassembly"
          ]
        },
        "configurationAttributes": {
          "launch": {
            "properties": {
              "executable": {
                "description": "Path of firmware or program",
                "type": "string"
              },
              "toolchainBinDir": {
                "description": "Path of toolchain binary directory",
                "type": "string"
              },
              "svdPath": {
                "default": null,
                "description": "Path to an SVD file describing the peripherals of the microcontroller",
                "type": "string"
              },
              "showDevDebugOutput": {
                "default": false,
                "description": "Prints all GDB responses to the console",
                "type": "boolean"
              }
            },
            "required": [
              "executable",
              "toolchainBinDir"
            ]
          }
        },
        "initialConfigurations": [
          {
            "name": "PlatformIO Debugger",
            "request": "launch",
            "type": "platformio-debug",
            "toolchainBinDir": "/usr/local/bin"
          }
        ],
        "configurationSnippets": [
          {
            "body": {
              "name": "${6:PlatformIO Debugger}",
              "request": "launch",
              "type": "platformio-debug",
              "executable": ".pioenvs/myenv/firmware.elf",
              "toolchainBinDir": "/usr/local/bin"
            },
            "description": "PlatformIO Debugger",
            "label": "PlatformIO Debugger"
          }
        ],
        "label": "PlatformIO Debugger",
        "program": "./node_modules/platformio-vscode-debug/lib/adapter.js",
        "runtime": "node",
        "type": "platformio-debug"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "platformio-debug.peripherals.updateNode",
          "when": "false"
        },
        {
          "command": "platformio-debug.peripherals.selectedNode",
          "when": "false"
        },
        {
          "command": "platformio-debug.peripherals.copyValue",
          "when": "false"
        },
        {
          "command": "platformio-debug.peripherals.setFormat",
          "when": "false"
        },
        {
          "command": "platformio-debug.registers.copyValue",
          "when": "false"
        },
        {
          "command": "platformio-debug.registers.selectedNode",
          "when": "false"
        },
        {
          "command": "platformio-debug.registers.setFormat",
          "when": "false"
        },
        {
          "command": "platformio-debug.memory.deleteHistoryItem",
          "when": "false"
        },
        {
          "command": "platformio-debug.examineMemory",
          "when": "debugType == platformio-debug"
        },
        {
          "command": "platformio-debug.memory.clearHistory",
          "when": "debugType == platformio-debug"
        },
        {
          "command": "platformio-debug.viewDisassembly",
          "when": "debugType == platformio-debug"
        },
        {
          "command": "platformio-debug.setForceDisassembly",
          "when": "debugType == platformio-debug"
        }
      ],
      "view/item/context": [
        {
          "command": "platformio-debug.peripherals.updateNode",
          "when": "view == platformio-debug.peripherals && viewItem == field"
        },
        {
          "command": "platformio-debug.peripherals.updateNode",
          "when": "view == platformio-debug.peripherals && viewItem == registerRW"
        },
        {
          "command": "platformio-debug.peripherals.updateNode",
          "when": "view == platformio-debug.peripherals && viewItem == registerWO"
        },
        {
          "command": "platformio-debug.peripherals.copyValue",
          "when": "view == platformio-debug.peripherals && viewItem == field"
        },
        {
          "command": "platformio-debug.peripherals.copyValue",
          "when": "view == platformio-debug.peripherals && viewItem == registerRW"
        },
        {
          "command": "platformio-debug.peripherals.copyValue",
          "when": "view == platformio-debug.peripherals && viewItem == registerRO"
        },
        {
          "command": "platformio-debug.registers.copyValue",
          "when": "view == platformio-debug.registers && viewItem == register"
        },
        {
          "command": "platformio-debug.registers.copyValue",
          "when": "view == platformio-debug.registers && viewItem == field"
        },
        {
          "command": "platformio-debug.peripherals.setFormat",
          "when": "view == platformio-debug.peripherals"
        },
        {
          "command": "platformio-debug.registers.setFormat",
          "when": "view == platformio-debug.registers"
        },
        {
          "command": "platformio-debug.memory.deleteHistoryItem",
          "when": "view == platformio-debug.memory",
          "group": "inline"
        }
      ],
      "view/title": [
        {
          "command": "platformio-debug.examineMemory",
          "when": "debugType == platformio-debug && view == platformio-debug.memory",
          "group": "navigation"
        },
        {
          "command": "platformio-debug.memory.clearHistory",
          "when": "debugType == platformio-debug && view == platformio-debug.memory",
          "group": "navigation"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "platformio",
          "title": "PlatformIO",
          "icon": "resources/platformio-activity-icon.png",
          "when": "pioCoreReady"
        }
      ]
    },
    "views": {
      "platformio": [
        {
          "id": "platformio-activitybar.tasks",
          "name": "Project Tasks",
          "when": "pioCoreReady"
        },
        {
          "id": "platformio-activitybar.quickAccess",
          "name": "Quick Access",
          "when": "pioCoreReady"
        }
      ],
      "debug": [
        {
          "id": "platformio-debug.peripherals",
          "name": "Peripherals"
        },
        {
          "id": "platformio-debug.registers",
          "name": "Registers"
        },
        {
          "id": "platformio-debug.memory",
          "name": "Memory"
        },
        {
          "id": "platformio-debug.disassembly",
          "name": "Disassembly"
        }
      ]
    },
    "keybindings": [
      {
        "command": "platformio-ide.build",
        "key": "ctrl+alt+b"
      },
      {
        "command": "platformio-ide.upload",
        "key": "ctrl+alt+u"
      },
      {
        "command": "platformio-ide.serialMonitor",
        "key": "ctrl+alt+s"
      },
      {
        "command": "workbench.action.tasks.runTask",
        "key": "ctrl+alt+t"
      }
    ],
    "taskDefinitions": [
      {
        "type": "PlatformIO",
        "required": [
          "task"
        ],
        "properties": {
          "task": {
            "type": "string",
            "description": "Task name"
          }
        }
      }
    ],
    "problemMatchers": [
      {
        "name": "platformio",
        "owner": "cpp",
        "fileLocation": [
          "relative",
          "${workspaceRoot}"
        ],
        "pattern": {
          "regexp": "^([^:\\n]+):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    ],
    "configuration": {
      "type": "object",
      "title": "PlatformIO IDE configuration",
      "properties": {
        "platformio-ide.useBuiltinPIOCore": {
          "type": "boolean",
          "default": true,
          "description": "Use built-in PlatformIO Core"
        },
        "platformio-ide.useDevelopmentPIOCore": {
          "type": "boolean",
          "default": true,
          "description": "Use development version of PlatformIO Core"
        },
        "platformio-ide.autoRebuildAutocompleteIndex": {
          "type": "boolean",
          "default": true,
          "description": "Automatically rebuild C/C++ Project Index when platformio.ini is changed or when new libraries are installed."
        },
        "platformio-ide.customPATH": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Custom PATH for `platformio` command. Paste here the result of `echo $PATH` (Unix) / `echo %PATH%` (Windows) command by typing into your system terminal if you prefer to use custom version of PlatformIO Core"
        },
        "platformio-ide.forceUploadAndMonitor": {
          "type": "boolean",
          "default": false,
          "description": "Force 'Upload and Monitor' task for `platformio-ide.upload` command"
        },
        "platformio-ide.updateTerminalPathConfiguration": {
          "type": "boolean",
          "default": true,
          "description": "Update Terminal configuration with patched PATH environment"
        },
        "platformio-ide.activateOnlyOnPlatformIOProject": {
          "type": "boolean",
          "default": false,
          "description": "Activate extension only when PlatformIO-based project (with `platformio.ini`) is opened in workspace"
        },
        "platformio-ide.defaultToolbarBuildAction": {
          "type": "string",
          "enum": [
            "release",
            "pre-debug"
          ],
          "default": "release",
          "description": "Default action for 'Build' button on PIO Toolbar"
        },
        "platformio-ide.autoCloseSerialMonitor": {
          "type": "boolean",
          "default": true,
          "description": "Automatically close Serial Port Monitor before uploading/testing"
        }
      }
    }
  },
  "scripts": {
    "lint": "eslint .eslintrc.js src",
    "format": "esformatter -i .eslintrc.js 'src/**.js' && eslint --fix .eslintrc.js src",
    "build": "babel src --out-dir lib && echo 'Done!'",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "node ./node_modules/vscode/bin/test",
    "vscode:package": "babel src --out-dir lib && vsce package"
  },
  "devDependencies": {
    "@types/node": "^8",
    "babel-cli": "^6.24.1",
    "babel-eslint": "^8.0.1",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-preset-env": "^1.6.0",
    "esformatter": "^0.10.0",
    "eslint": "^5.1.0",
    "eslint-plugin-import": "^2.7.0",
    "vsce": "^1.27.0",
    "vscode": "^1.1.1"
  },
  "dependencies": {
    "fs-plus": "^3.0.0",
    "platformio-node-helpers": "^3.0.0",
    "platformio-vscode-debug": "^1.2.0"
  },
  "extensionDependencies": [
    "ms-vscode.cpptools"
  ]
}
